version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: messenger_mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: messenger_pro
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./scripts/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - messenger_network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: messenger_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --requirepass redis123
    volumes:
      - redis_data:/data
    networks:
      - messenger_network

  # Backend API Server
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: messenger_backend
    restart: unless-stopped
    environment:
      NODE_ENV: development
      PORT: 3000
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/messenger_pro?authSource=admin
      REDIS_URL: redis://redis:6379
      REDIS_PASSWORD: redis123
      JWT_SECRET: your-development-jwt-secret-key
      JWT_REFRESH_SECRET: your-development-refresh-secret
    ports:
      - "3000:3000"
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
      - .:/app
      - /app/node_modules
    depends_on:
      - mongodb
      - redis
    networks:
      - messenger_network
    command: npm run dev

  # Frontend (optional - serve the HTML file)
  frontend:
    image: nginx:alpine
    container_name: messenger_frontend
    restart: unless-stopped
    ports:
      - "8080:80"
    volumes:
      - ./public:/usr/share/nginx/html
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - backend
    networks:
      - messenger_network

  # STUN/TURN Server for WebRTC
  coturn:
    image: coturn/coturn:4.6-alpine
    container_name: messenger_coturn
    restart: unless-stopped
    ports:
      - "3478:3478/udp"
      - "3478:3478/tcp"
      - "49160-49200:49160-49200/udp"
    environment:
      - TURN_USERNAME=messenger
      - TURN_PASSWORD=turnpassword123
    command: |
      -n
      --log-file=stdout
      --min-port=49160
      --max-port=49200
      --fingerprint
      --no-multicast-peers
      --no-cli
      --no-tlsv1
      --no-tlsv1_1
      --realm=messenger.local
      --server-name=messenger.local
      --static-auth-secret=turnsecret123
      --user=messenger:turnpassword123
      --no-stdout-log
    networks:
      - messenger_network

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local

networks:
  messenger_network:
    driver: bridge